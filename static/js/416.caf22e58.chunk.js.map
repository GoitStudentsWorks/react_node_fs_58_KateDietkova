{"version":3,"file":"static/js/416.caf22e58.chunk.js","mappings":"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","sources":["components/RecipePageComponents/RecipePageHero/RecipePageHero.styled.js","components/RecipePageComponents/RecipePageHero/RecipePageHero.jsx","components/RecipePageComponents/RecipeIngredientsList/RecipeIngredientsList.styled.js","components/RecipePageComponents/RecipeIngredientsList/RecipeIngredientsList.jsx","components/RecipePageComponents/RecipePreparation/RecipePreparation.styled.js","components/RecipePageComponents/RecipePreparation/RecipePreparation.jsx","pages/RecipePage/RecipePage.styled.js","pages/RecipePage/RecipePage.jsx","redux/ingredients/ingredientsSelectors.js","redux/recipes/recipesSelectors.js"],"sourcesContent":["\nimport styled from \"styled-components\";\nimport bgMobile from \"assets/images/mobile/recipe-page/bg-recipe.jpg\";\nimport bgMobileX2 from \"assets/images/mobile/recipe-page/bg-recipe-2x.png\";\nimport bgTablet from \"assets/images/tablet/recipe-page/bg-recipe.jpg\";\nimport bgTabletX2 from \"assets/images/tablet/recipe-page/bg-recipe-2x.jpg\";\nimport bgDesktop from \"assets/images/desktop/recipe-page/bg-recipe.jpg\";\nimport bgDesktopX2 from \"assets/images/desktop/recipe-page/bg-recipe-2x.jpg\";\n\n\nexport const SectionHero = styled.div`\n  background-image: url(${bgMobile});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position:absolute;\n  top:0;\n  // z-index:0;\n  width:100%;\n  height:455px;\n  display: flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  text-align:center;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobileX2});\n  }\n  @media (min-width: 768px) {\n    background-image: url(${bgTablet});\n    height: 495px;\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgTabletX2});\n    }\n  }\n  @media (min-width: 1440px) {\n    background-image: url(${bgDesktop});\n    height:493px;\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgDesktopX2});\n    }\n  }\n`;\n\nexport const SectionHeroTitle = styled.h1`\n  // max-width:360px;\n  margin-right:auto;\n  margin-left:auto;\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colors.accent};\n  margin-bottom: 18px;\n  @media screen and (min-width: 768px) {\n    font-size: 44px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const RecipeDescription = styled.p`\n  max-width:300px;\n  margin-right:auto;\n  margin-left:auto;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: -0.02em;\n  color: #22252a;\n  margin-bottom: 24px;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    max-width:506px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 30px;\n    width:656px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border-radius: 24px 44px;\n  border: 1px solid ${props => props.theme.colors.accentGreen};\n  font-size: 10px;\n  line-height: 1.5;\n  padding: 10px 18px;\n  color: #22252a;\n  margin-bottom: 42px;\n  cursor: pointer;\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n    max-width: 330px;\n    margin-bottom: 60px;\n    padding: 18px 44px;\n    border: 2px solid ${props => props.theme.colors.accentGreen};\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 48px;\n  }\n  &:hover,\n  &:focus {\n    background-color: #8baa36;\n    color: #fafafa;\n  }\n`;\n\nexport const RecipeTimer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  svg {\n    font-size: 14px;\n    margin-right: 4px;\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const RecipeTime = styled.p`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.4;\n  letter-spacing: -0.24px;\n  color: #23262a;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;","import {\n  SectionHero,\n  SectionHeroTitle,\n  RecipeDescription,\n  RecipeTimer,\n  RecipeTime,\n  Button,\n} from './RecipePageHero.styled';\n\nimport { AiOutlineClockCircle } from 'react-icons/ai';\n// import { useParams } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\n// import { getRecipeById } from 'servicesApi/api';\n// import { fetchRecipe } from 'redux/recipes/recipesOperations';\n\n\nexport const RecipePageHero = ({ title, description, time }) => {\n  // const { recipeId } = useParams();\n  \n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(getRecipeById(recipeId));\n  // }, [dispatch]);\n  \n  return (\n    <SectionHero>\n        <SectionHeroTitle>{title}</SectionHeroTitle>\n        <RecipeDescription>{description}</RecipeDescription>\n        <Button>\n        Add to favorite recipes\n        </Button>\n        <RecipeTimer>\n          <AiOutlineClockCircle color=\"black\" />\n          <RecipeTime>{time} min</RecipeTime>\n        </RecipeTimer>\n    </SectionHero>\n  );\n};\n\n","import styled from 'styled-components';\n\n\nexport const IngredientsListSection = styled.div`\n\n  padding-top:400px;\n  width: 100%;\n  // height:100%;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-bottom: 50px;\n  margin-top: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-top: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding-left: 0;\n    padding-right: 0;\n    margin-top: 50px;\n  }\n`;\n\nexport const ListTitle = styled.div`\n  background: #8baa36;\n  border-radius: 8px;\n  height: 40px;\n  width: 100%;\n  padding: 12px 14px;\n  display: flex;\n  align-items: center;\n  gap: 18px;\n  margin-bottom: 24px;\n  @media screen and (min-width: 768px) {\n    height: 60px;\n    padding: 21px 32px;\n    gap: 38px;\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1240px;\n    padding: 21px 40px;\n    gap: 110px;\n  }\n`;\n\nexport const IngredientsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n  @media (min-width: 1440px) {\n   \n     width: 1240px;\n  }\n`;\nexport const IngedientsItem = styled.li`\n  display: flex;\n  background-color: ${props=>props.theme.colors.bgLightGreen};\n  padding: 14px 29px 14px 14px;\n  justify-content: space-between;\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    padding: 33px 58px 33px 40px;\n  }\n  @media (min-width: 768px) {\n    padding: 27px 70px 27px 58px;\n  }\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  @media screen and (min-width: 768px) {\n    gap: 78px;\n    &:first-child {\n      gap: 24px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 151px;\n    &:first-child {\n      gap: 40px;\n    }\n  }\n`;\n\nexport const IngedientsImg = styled.img`\n  width: 57px;\n  height: 57px;\n  margin-right: 12px;\n  @media (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n    margin-right: 40px;\n  }\n  @media (min-width: 1440px) {\n    width: 128px;\n    height: 128px;\n    margin-right: 66px;\n  }\n`;\nexport const Image = styled.img`\n   width: 57px;\n  height: 57px;\n`;\n\nexport const IngedientsTitle = styled.p`\n  \n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: 12px;\n  line-height: 1.16;\n  max-width: 200px;\n  color: ${props => props.theme.colors.textDark};\n  @media (min-width: 768px) {\n    max-width: 220px;\n    font-size: 24px;\n    line-height: 1;\n  }\n  @media (min-width: 1440px) {\n    max-width: 420px;\n  }\n`;\n\nexport const IngedientsMeasure = styled.span`\n  margin-right: 28px;\n  border-radius: 4px;\n  padding: 4px;\n  background-color: ${props => props.theme.colors.accent};\n  font-family: \"Poppins\";\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textWhite};\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.5;\n    padding: 4px 8px;\n    margin-right: 78px;\n  }\n  @media (min-width: 1440px) {\n    margin-right: 151px;\n  }\n`;\n\nexport const CheckBox = styled.span`\n  border: 1px solid rgba(126, 126, 126, 0.5);\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  color: transparent;\n  @media (min-width: 768px) {\n    width: 35px;\n    height: 35px;\n  }\n`;\n\n\nexport const ListSpan = styled.span`\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 15px;\n  letter-spacing: 0.03em;\n  color: #fafafa;\n  &:first-child {\n    margin-right: auto;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 27px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\n","import { useSelector } from 'react-redux';\nimport { selectIngredients } from 'redux/ingredients/ingredientsSelectors';\n\nimport {\n  IngredientsListSection,\n  ListTitle,\n  ListSpan,\n  IngredientsList,\n  IngedientsItem,\n  Wrap,\n  Image,\n  IngedientsTitle,\n  IngedientsMeasure,\n  CheckBox,\n} from './RecipeIngredientsList.styled';\n\nexport const RecipeIngredientsList = ({ ingredients }) => {\n  const allIngredients = useSelector(selectIngredients);\n\n  const ingredientsId = ingredients.map(data => data.id);\n\n  const selectIngred = allIngredients.filter(data => {\n    if (ingredientsId.includes(data._id)) {\n      return data;\n    }\n    return null;\n  });\n\n  console.log('ingred', selectIngred);\n  return (\n    <IngredientsListSection>\n      <ListTitle>\n        <ListSpan>Ingredients</ListSpan>\n        <ListSpan>Number</ListSpan>\n        <ListSpan>Add to list</ListSpan>\n      </ListTitle>\n\n      <IngredientsList>\n        {selectIngred.map(({ _id, ttl, thb, measure }) => {\n          return (\n            <IngedientsItem key={_id}>\n              <Wrap>\n                <Image src={thb} alt={ttl} />\n                <IngedientsTitle>{ttl}</IngedientsTitle>\n              </Wrap>\n              <Wrap>\n                <IngedientsMeasure>{measure}</IngedientsMeasure>\n                <CheckBox></CheckBox>\n              </Wrap>\n            </IngedientsItem>\n          );\n        })}\n      </IngredientsList>\n    </IngredientsListSection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PreparationSection = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-bottom: 100px;\n  \n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 0;\n    margin-bottom: 200px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n    display: flex;\n    gap: 50px;\n    flex-direction: row;\n    align-items: center;\n    margin: auto;\n    margin-bottom: 200px;\n   \n  }\n`;\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  color: ${props => props.theme.colors.textDark};\n  @media screen and (min-width: 768px) {\n    letter-spacing: -0.24px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const PrepeaRecipe = styled.ul`\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: rgba(0, 0, 0, 0.8);\n  margin-bottom: 40px;\n  display:flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.02em;\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n  }\n`;\nexport const Steps = styled.ol`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  counter-reset: step;\n`;\n\nexport const Step = styled.li`\n  display: flex;\n  &:not(:last-child) {\n    margin-bottom: 14px;\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n  &::before {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    counter-increment: step;\n    content: counter(step);\n    margin-right: 14px;\n    font-size: 14px;\n    line-height: 1.5;\n    font-weight: 600;\n    color: #ffffff;\n    background: #8baa36;\n    width: 21px;\n    height: 21px;\n    border-radius: 50%;\n  }\n  p {\n    flex: 1;\n    font-size: 12px;\n    line-height: 1.17;\n    letter-spacing: -0.02em;\n    color: rgba(0, 0, 0, 0.8);\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.29;\n    }\n  }\n`;\nexport const Image = styled.div`\n  width: 100%;\n  height: auto;\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    max-width: 433px;\n  }\n`;\nexport const PrepeaRecipeImage = styled.img`\n  display: block;\n  object-fit: contain;\n  overflow: hidden;\n  border-radius: 8px;\n`;","import {\n    PreparationSection,\n    Title,\n    PrepeaRecipe,\n    PrepeaRecipeImage,\n    Steps,\n    Step,\n    Image\n} from './RecipePreparation.styled';\nimport IngredientsPlaceholder from '../../../assets/images/desktop/mocks/recipe-photo-default-2x.jpg'\nexport const RecipePreparation = ({instructions, thumb}) => {\n  let steps = [];\n  if (instructions) {\n    if (!instructions.includes('\\r\\n')) {\n      return;\n    } else {\n      steps = instructions.split('\\n');\n    }\n  }\n\n  return (\n    <PreparationSection>\n      <div>\n      <Title>Recipe Preparation</Title>\n      <PrepeaRecipe>\n            <Steps>\n              {steps.length > 0 ? (\n              steps.map((step, numb) => (\n                  <Step key={numb}>\n                    <p>{step}</p>\n                  </Step>\n              ))\n          ) : (\n            instructions\n          )}\n          </Steps>\n      </PrepeaRecipe>\n      </div>\n      <Image>\n       <PrepeaRecipeImage src={thumb ?? IngredientsPlaceholder}></PrepeaRecipeImage> \n      </Image>\n      \n    </PreparationSection>\n  );\n};\n\n","// import { Container } from 'components/universalComponents/Container/Container.styled';\nimport styled from 'styled-components';\n\nexport const RecipeSection = styled.div`\n  background-color: ${props =>\n    props.theme.darkTheme\n      ? props.theme.colors.bgdarkTheme\n      : props.theme.colors.textWhite};\n`;\n","\nimport {RecipePageHero } from 'components/RecipePageComponents/RecipePageHero/RecipePageHero';\nimport {RecipeIngredientsList} from 'components/RecipePageComponents/RecipeIngredientsList/RecipeIngredientsList';\nimport {RecipePreparation} from 'components/RecipePageComponents/RecipePreparation/RecipePreparation';\nimport { RecipeSection } from './RecipePage.styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n\nimport { useDispatch } from 'react-redux';\nimport { fetchRecipe } from 'redux/recipes/recipesOperations';\nimport { selectRecipes,  selectIsLoading} from '../../redux/recipes/recipesSelectors';\nimport { getAllIngredients } from 'redux/ingredients/ingredientsOperations';\n\n\nconst RecipePage = () => {\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const currentRecipe  = useSelector(selectRecipes);\n  const isLoading = useSelector(selectIsLoading);\n  \n  // const error = useSelector(selectRecipesError);\n  // const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    dispatch(fetchRecipe(recipeId));\n    dispatch(getAllIngredients());\n    window.scroll(0, 0);\n  }, [dispatch, recipeId]);\n\n  if (!currentRecipe) {\n    return ;\n  }\n  // const showError = error || currentRecipe;\n  console.log('string', currentRecipe)\n\n    return (\n      <>\n        {!isLoading && currentRecipe && (\n          \n          <RecipeSection>\n          <>\n            <RecipePageHero\n              title={currentRecipe.title}\n              description={currentRecipe.description}\n              time={currentRecipe.time}\n            />\n              <RecipeIngredientsList recipeId={recipeId} ingredients={currentRecipe.ingredients} />\n            <RecipePreparation instructions={currentRecipe.instructions} foto={currentRecipe.thumb} />\n          </>\n        </RecipeSection>  \n        )}\n      </>\n    );\n};\nexport default RecipePage;\n","export const selectIngredients = state => state.ingredients.ingredients;\nexport const selectShoppingList = state => state.ingredients.shoppingList;\n\nexport const selectIsLoading = state => state.ingredients.isLoggedIn;\nexport const selectRecipesError = state => state.ingredients.error;\n","export const selectPopularRecipes = state => state.recipes.popularRecipes;\nexport const selectMainRecipesByCategory = state =>\n  state.recipes.recipesByCategory;\nexport const selectFavoritesRecipes = state => state.recipes.favoritesRecipes;\nexport const selectUserRecipes = state => state.recipes.userRecipes;\nexport const selectRecipesByTitle = state => state.recipes.recipesByTitle;\nexport const selectRecipesByIngredients = state =>\n  state.recipes.recipesBuIngredients;\n\nexport const selectIsLoading = state => state.recipes.isLoading;\nexport const selectRecipesError = state => state.recipes.error;\n\nexport const selectRecipes = state => state.recipes.recipe;"],"names":["SectionHero","styled","bgMobile","bgMobileX2","bgTablet","bgTabletX2","bgDesktop","bgDesktopX2","SectionHeroTitle","props","theme","fontWeights","semiBold","colors","accent","RecipeDescription","Button","accentGreen","RecipeTimer","RecipeTime","RecipePageHero","title","description","time","color","IngredientsListSection","ListTitle","IngredientsList","IngedientsItem","bgLightGreen","Wrap","Image","IngedientsTitle","medium","textDark","IngedientsMeasure","textWhite","CheckBox","ListSpan","RecipeIngredientsList","ingredients","allIngredients","useSelector","selectIngredients","ingredientsId","map","data","id","selectIngred","filter","includes","_id","console","log","ttl","thb","measure","src","alt","PreparationSection","Title","PrepeaRecipe","Steps","Step","PrepeaRecipeImage","RecipePreparation","instructions","thumb","steps","split","length","step","numb","IngredientsPlaceholder","RecipeSection","darkTheme","bgdarkTheme","dispatch","useDispatch","recipeId","useParams","currentRecipe","selectRecipes","isLoading","selectIsLoading","useEffect","fetchRecipe","getAllIngredients","window","scroll","foto","state","selectMainRecipesByCategory","recipes","recipesByCategory","selectRecipesError","error","recipe"],"sourceRoot":""}